# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run modules JSON tests
        run: python test-modules-json.py

      # - name: Verify if only modules.json is changed
      #   id: check_changes
      #   run: |
      #     if [[ $(git diff --name-only HEAD~1 HEAD) == "modules.json" ]]; then
      #       echo "Modules.json is the only file changed."
      #       echo "::set-output name=modules_changed::true"
      #     else
      #       echo "Other files have been changed."
      #       echo "::set-output name=modules_changed::false"
      #     fi

      - name: Run generation script
        # if: steps.check_changes.outputs.modules_changed == 'true'
        run: python generate-readme.py

      - name: Commit and push changes
        # if: steps.check_changes.outputs.modules_changed == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md
          git commit -m "Update README.md with latest module changes"
          git push origin dev